---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/movie/438631/reviews?api_key=<movie_api_key>&language=en-US
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.1.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 03 Feb 2022 03:31:41 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=28800
      X-Memc:
      - HIT
      X-Memc-Key:
      - 8839459ef216fa3bf65abdeeed951a8c5a96a68f
      X-Memc-Age:
      - '5804'
      X-Memc-Expires:
      - '10943'
      Etag:
      - W/"80095a09d4e1734cb2f6a47ebb0636df"
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 da7ea5395e754371818e8c7b67829e5c.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - IAH50-C4
      X-Amz-Cf-Id:
      - IEf5kKzv-MAS-Vnpfua_kNuku04guulpSXlmFlusIsF8DhY6KJiQQg==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 03 Feb 2022 03:31:41 GMT
recorded_with: VCR 6.0.0
